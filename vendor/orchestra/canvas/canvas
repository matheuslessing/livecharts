#!/usr/bin/env php
<?php

$workingPath = getcwd();

define('CANVAS_WORKING_PATH', $workingPath);

require $_composer_autoload_path ?? __DIR__.'/vendor/autoload.php';

$config = ['preset' => Orchestra\Canvas\Canvas::presetFromEnvironment($workingPath)];

if (file_exists($workingPath.DIRECTORY_SEPARATOR.'canvas.yaml')) {
    $config = Symfony\Component\Yaml\Yaml::parseFile($workingPath.DIRECTORY_SEPARATOR.'canvas.yaml');
}

$files = new Illuminate\Filesystem\Filesystem();

$preset = Orchestra\Canvas\Canvas::preset(
    $config, $workingPath, $files
);

$app = new Symfony\Component\Console\Application('Canvas for Laravel');

$app->setVersion(Composer\InstalledVersions::getPrettyVersion('orchestra/canvas'));

if (! file_exists("{$workingPath}/canvas.yaml")) {
    $app->add(new Orchestra\Canvas\Commands\Preset($preset));
}

$app->add(new Orchestra\Canvas\Commands\Channel($preset));
$app->add(new Orchestra\Canvas\Commands\Component($preset));
$app->add(new Orchestra\Canvas\Commands\Console($preset));
$app->add(new Orchestra\Canvas\Commands\Event($preset));
$app->add(new Orchestra\Canvas\Commands\Exception($preset));
$app->add(new Orchestra\Canvas\Commands\Database\Cast($preset));
$app->add(new Orchestra\Canvas\Commands\Database\Eloquent($preset));
$app->add(new Orchestra\Canvas\Commands\Database\Factory($preset));
$app->add(new Orchestra\Canvas\Commands\Database\Migration($preset));
$app->add(new Orchestra\Canvas\Commands\Database\Observer($preset));
$app->add(new Orchestra\Canvas\Commands\Job($preset));
$app->add(new Orchestra\Canvas\Commands\Listener($preset));
$app->add(new Orchestra\Canvas\Commands\Mail($preset));
$app->add(new Orchestra\Canvas\Commands\Notification($preset));
$app->add(new Orchestra\Canvas\Commands\Policy($preset));
$app->add(new Orchestra\Canvas\Commands\Provider($preset));
$app->add(new Orchestra\Canvas\Commands\Request($preset));
$app->add(new Orchestra\Canvas\Commands\Resource($preset));
$app->add(new Orchestra\Canvas\Commands\Routing\Controller($preset));
$app->add(new Orchestra\Canvas\Commands\Routing\Middleware($preset));
$app->add(new Orchestra\Canvas\Commands\Rule($preset));
$app->add(new Orchestra\Canvas\Commands\Testing($preset));
$app->add(new Orchestra\Canvas\Commands\StubPublish($preset));

if ($preset->is('laravel')) {
    $app->add(new Orchestra\Canvas\Commands\Database\Seeder($preset));
}

$preset->addAdditionalCommands($app);

$app->run();
